{"version":3,"file":"event-listeners.js","sourceRoot":"","sources":["../src/event-listeners.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subject, Observable, from, fromEvent, of, merge } from \"rxjs\";\n\nimport { matchesAncestors, createMutationObservable, subscribeWhen, bufferDebounceTime } from \"./common\";\nimport { map, filter, startWith, tap, flatMap, mergeAll, switchMap } from \"rxjs/operators\";\n\nconst flat = <T>(x: Array<Array<T>>): Array<T> => Array.prototype.concat.apply([], x);\n\nconst combineRecords = (records: MutationRecord[]) => ({\n  addedNodes: new Set(flat(records.map(r => Array.from(r.addedNodes)))),\n  removedNodes: new Set(flat(records.map(r => Array.from(r.removedNodes)))),\n});\n\nexport class EventListenersMixin {\n  el: HTMLElement;\n\n  linkSelector: string;\n\n  $: {\n    linkSelector?: Subject<string>;\n    prefetch?: Subject<boolean>;\n  }\n\n  // LINKS 2\n  setupEventListeners() {\n    const pushEvent$ = fromEvent(this.el, \"click\").pipe(\n      map(event => {\n        const anchor = matchesAncestors(event.target as Element, this.linkSelector);\n        if (anchor instanceof HTMLAnchorElement) {\n          return [event, anchor] as [MouseEvent, HTMLAnchorElement];\n        }\n      }),\n      filter(x => !!x),\n    );\n\n    const matchOrQuery = (el: Element, selector: string): Observable<Element> => {\n      if (el.matches(selector)) {\n        return of(el);\n      } else {\n        return from(el.querySelectorAll(selector));\n      }\n    }\n\n    const addEventListeners = (link: HTMLAnchorElement) => {\n      return merge(\n        fromEvent(link, \"mouseenter\", { passive: true }),\n        fromEvent(link, \"touchstart\", { passive: true }),\n        fromEvent(link, \"focus\", { passive: true }),\n      ).pipe(map(event => [event, link] as [Event, HTMLAnchorElement]))\n    };\n\n    const hintEvent$ = this.$.linkSelector.pipe(switchMap((linkSelector) => {\n      const links = new Map<HTMLAnchorElement, Observable<[Event, HTMLAnchorElement]>>();\n\n      const addLink = (link: HTMLAnchorElement) => {\n        if (!links.has(link)) {\n          links.set(link, addEventListeners(link));\n        }\n      }\n      const removeLink = (link: HTMLAnchorElement) => {\n        links.delete(link);\n      }\n\n      return createMutationObservable(this.el, { childList: true, subtree: true }).pipe(\n        startWith({ addedNodes: [this.el], removedNodes: [] }),\n        bufferDebounceTime(500),\n        map(combineRecords),\n        switchMap(({ addedNodes, removedNodes }) => {\n          from(removedNodes).pipe(\n            filter(el => el instanceof Element),\n            flatMap((el: Element) => matchOrQuery(el, linkSelector)),\n            tap(removeLink)\n          ).subscribe()\n\n          from(addedNodes).pipe(\n            filter(el => el instanceof Element),\n            flatMap((el: Element) => matchOrQuery(el, linkSelector)),\n            tap(addLink)\n          ).subscribe()\n\n          return from(links.values()).pipe(mergeAll());\n        }),\n        subscribeWhen(this.$.prefetch),\n      );\n    }));\n\n    return { hintEvent$, pushEvent$ }\n  }\n}\n"]}