{"version":3,"file":"history.js","sourceRoot":"","sources":["../src/history.ts"],"names":[],"mappings":"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","sourcesContent":["import { isExternal, getScrollTop, getScrollHeight, Cause, Context } from \"./common\";\n\nimport { ReplaceContext } from \"./update\";\n\n// @ts-ignore\nwindow.HashChangeEvent = window.HashChangeEvent || function HashChangeEvent(type, { oldURL = '', newURL = '' } = {}) {\n  const e = new CustomEvent(type)\n  // @ts-ignore\n  e.oldURL = oldURL;\n  // @ts-ignore\n  e.newURL = newURL;\n  return e;\n}\n\nfunction simHashChange(newURL: URL, oldURL: URL) {\n  if (newURL.hash !== oldURL.hash) {\n    window.dispatchEvent(new HashChangeEvent('hashchange', { newURL: newURL.href, oldURL: oldURL.href }));\n  }\n}\n\nexport class HistoryManager {\n  private parent: Location & { histId: string, simulateHashChange: boolean };\n\n  constructor(parent: Location & { histId: string, simulateHashChange: boolean }) {\n    this.parent = parent;\n  }\n\n  updateHistoryState({ cause, replace, url, oldURL }: Context) {\n    if (isExternal(this.parent)) return;\n\n    switch (cause) {\n      case Cause.Init:\n      case Cause.Push: {\n        const { histId } = this.parent;\n\n        if (replace || url.href === location.href) {\n          const state = { ...history.state, [histId]: {} };\n          history.replaceState(state, document.title, url.href);\n        } else {\n          history.pushState({ [histId]: {} }, document.title, url.href);\n        }\n        // no break\n      }\n      case Cause.Pop: {\n        if (this.parent.simulateHashChange && oldURL) simHashChange(url, oldURL);\n        break;\n      }\n      default: {\n        // if (process.env.DEBUG) console.warn(`Type '${cause}' not reconginzed`);\n        break;\n      }\n    }\n  }\n\n  updateTitle({ cause, title }: ReplaceContext) {\n    document.title = title;\n    if (!isExternal(this.parent) && cause === Cause.Push) {\n      history.replaceState(history.state, title);\n    }\n  }\n\n  updateHistoryScrollPosition = () => {\n    if (isExternal(this.parent)) return;\n\n    const state = this.assignScrollPosition(history.state || {});\n    history.replaceState(state, document.title);\n  }\n\n  private assignScrollPosition(state: any) {\n    const { histId } = this.parent;\n    return {\n      ...state,\n      [histId]: {\n        ...state[histId],\n        scrollTop: getScrollTop(),\n        scrollHeight: getScrollHeight(),\n      },\n    };\n  }\n};\n"]}