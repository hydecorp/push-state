{"version":3,"file":"rewrite-urls.js","sourceRoot":"","sources":["../src/rewrite-urls.ts"],"names":[],"mappings":"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","sourcesContent":["// When fetching documents from an external source,\n// relative URLs will be resolved relative to the current `window.location`.\n// We can rewrite URL to absolute urls\nexport function rewriteURLs(replaceEls: Element[], base: string) {\n  replaceEls.forEach((el) => {\n    el.querySelectorAll(\"[href]\").forEach(rewriteURL(\"href\", base));\n    el.querySelectorAll(\"[src]\").forEach(rewriteURL(\"src\", base));\n    el.querySelectorAll(\"img[srcset]\").forEach(rewriteURLSrcSet(\"srcset\", base));\n    el.querySelectorAll(\"blockquote[cite]\").forEach(rewriteURL(\"cite\", base));\n    el.querySelectorAll(\"del[cite]\").forEach(rewriteURL(\"cite\", base));\n    el.querySelectorAll(\"ins[cite]\").forEach(rewriteURL(\"cite\", base));\n    el.querySelectorAll(\"q[cite]\").forEach(rewriteURL(\"cite\", base));\n    el.querySelectorAll(\"img[longdesc]\").forEach(rewriteURL(\"longdesc\", base));\n    el.querySelectorAll(\"frame[longdesc]\").forEach(rewriteURL(\"longdesc\", base));\n    el.querySelectorAll(\"iframe[longdesc]\").forEach(rewriteURL(\"longdesc\", base));\n    el.querySelectorAll(\"img[usemap]\").forEach(rewriteURL(\"usemap\", base));\n    el.querySelectorAll(\"input[usemap]\").forEach(rewriteURL(\"usemap\", base));\n    el.querySelectorAll(\"object[usemap]\").forEach(rewriteURL(\"usemap\", base));\n    el.querySelectorAll(\"form[action]\").forEach(rewriteURL(\"action\", base));\n    el.querySelectorAll(\"button[formaction]\").forEach(rewriteURL(\"formaction\", base));\n    el.querySelectorAll(\"input[formaction]\").forEach(rewriteURL(\"formaction\", base));\n    el.querySelectorAll(\"video[poster]\").forEach(rewriteURL(\"poster\", base));\n    el.querySelectorAll(\"object[data]\").forEach(rewriteURL(\"data\", base));\n    el.querySelectorAll(\"object[codebase]\").forEach(rewriteURL(\"codebase\", base));\n    el.querySelectorAll(\"object[archive]\").forEach(rewriteURLList(\"archive\", base));\n    /* el.querySelectorAll(\"command[icon]\").forEach(this.rewriteURL(\"icon\")); */ // obsolte\n  });\n}\n\nfunction rewriteURL(attr: string, base: string) {\n  return (el: Element) => {\n    try {\n      el.setAttribute(attr, new URL(el.getAttribute(attr), base).href);\n    } catch (e) {\n      // if (process.env.DEBUG) console.warn(`Couldn't rewrite URL in attribute ${attr} on element`, el);\n    }\n  };\n}\n\nfunction rewriteURLSrcSet(attr: string, base: string) {\n  return (el: Element) => {\n    try {\n      el.setAttribute(\n        attr,\n        el\n          .getAttribute(attr)\n          .split(/\\s*,\\s*/)\n          .map(str => {\n            const pair = str.split(/\\s+/);\n            pair[0] = new URL(pair[0], base).href;\n            return pair.join(\" \");\n          })\n          .join(\", \")\n      );\n    } catch (e) {\n      // if (process.env.DEBUG) console.warn(`Couldn't rewrite URLs in attribute ${attr} on element`, el);\n    }\n  };\n}\n\nfunction rewriteURLList(attr: string, base: string) {\n  return (el: Element) => {\n    try {\n      el.setAttribute(\n        attr,\n        el\n          .getAttribute(attr)\n          .split(/[\\s,]+/)\n          .map(str => new URL(str, base).href)\n          .join(\", \")\n      );\n    } catch (e) {\n      // if (process.env.DEBUG) console.warn(`Couldn't rewrite URLs in attribute ${attr} on element`, el);\n    }\n  };\n}"]}